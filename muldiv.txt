.text
.globl main

main: 
	# load two 32 bit registers
	li $t0, 2 # multiplier
	li $t1, 3 # multiplicand
	li $t2, 0 # iterator i
	li $t3, 0 # product

	j multiply

mulif:
	add $t3, $t3, $t1
	addi $t2, $t2, 1
	beq $t2, 15, exit
	j multiply

mulelse:
	sll $t1, $t1, 1
	srl $t0, $t0, 1
	addi $t2, $t2, 1
	beq $t2, 15, exit
	j multiply

multiply:
	andi $t4, $t0, 1
	beq $t4, 1, mulif
	bne $t4, 1, mulelse

	# addi $t2, $t2, 1
	# beq $t2, 15, exit
	
	# j multiply

exit: 
	li $v0, 10
	syscall

